/* Basic CSS styles for the translator app */
* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #f3f4f6;
}

/* Error Boundary Styles */
.error-boundary {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  padding: 2rem;
  text-align: center;
  background-color: #fef2f2;
  color: #dc2626;
}

.error-boundary h2 {
  margin-bottom: 1rem;
  font-size: 1.5rem;
  font-weight: bold;
}

.error-boundary p {
  margin-bottom: 2rem;
  color: #6b7280;
}

.retry-button {
  padding: 0.75rem 1.5rem;
  background-color: #dc2626;
  color: white;
  border: none;
  border-radius: 0.5rem;
  font-size: 1rem;
  cursor: pointer;
  transition: background-color 0.2s;
}

.retry-button:hover {
  background-color: #b91c1c;
}

.container {
  max-width: 1024px;
  margin: 0 auto;
  padding: 1.5rem;
}

.header {
  text-align: center;
  margin-bottom: 2rem;
}

.header h1 {
  font-size: 2rem;
  font-weight: bold;
  color: #1f2937;
}

.language-selector {
  display: flex;
  gap: 1rem;
  margin-bottom: 1rem;
  align-items: center;
}

.language-selector select {
  flex: 1;
  padding: 0.5rem;
  border: 1px solid #d1d5db;
  border-radius: 0.5rem;
  font-size: 1rem;
}

.swap-button {
  padding: 0.5rem;
  background: none;
  border: 1px solid #d1d5db;
  border-radius: 0.5rem;
  cursor: pointer;
  color: #6b7280;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s;
}

.swap-button:hover {
  background-color: #f3f4f6;
  color: #374151;
  border-color: #9ca3af;
}

.swap-button svg {
  width: 1.25rem;
  height: 1.25rem;
}

.input-section {
  position: relative;
  margin-bottom: 1.5rem;
}

.input-section textarea {
  width: 100%;
  padding: 1rem;
  border: 1px solid #d1d5db;
  border-radius: 0.5rem;
  min-height: 150px;
  font-size: 1rem;
  resize: vertical;
}

.mic-button {
  position: absolute;
  bottom: 1rem;
  right: 1rem;
  padding: 0.75rem;
  background: #3b82f6;
  border: none;
  border-radius: 50%;
  cursor: pointer;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.mic-button:hover {
  background: #2563eb;
  transform: scale(1.05);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

.mic-button.listening {
  background: #ef4444;
  animation: pulse 1.5s infinite;
}

.mic-button.listening:hover {
  background: #dc2626;
}

.mic-button:disabled {
  background: #9ca3af;
  cursor: not-allowed;
  transform: none;
}

.mic-button svg {
  width: 1.5rem;
  height: 1.5rem;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.7);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(239, 68, 68, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(239, 68, 68, 0);
  }
}

.translate-button {
  width: 100%;
  background-color: #3b82f6;
  color: white;
  padding: 0.75rem;
  border: none;
  border-radius: 0.5rem;
  font-size: 1rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.translate-button:hover:not(:disabled) {
  background-color: #2563eb;
}

.translate-button:disabled {
  background-color: #d1d5db;
  cursor: not-allowed;
}

.translate-button svg {
  width: 1.25rem;
  height: 1.25rem;
}

.output-section {
  position: relative;
  background-color: #f9fafb;
  padding: 1rem;
  border-radius: 0.5rem;
  min-height: 150px;
  margin-top: 1.5rem;
}

.output-section p {
  white-space: pre-wrap;
  margin: 0;
}

.play-button {
  position: absolute;
  bottom: 1rem;
  right: 1rem;
  padding: 0.5rem;
  background: none;
  border: none;
  cursor: pointer;
  color: #6b7280;
}

.play-button:hover {
  color: #374151;
}

.play-button svg {
  width: 1.5rem;
  height: 1.5rem;
}

.error-message {
  color: #ef4444;
  text-align: center;
  margin-top: 1rem;
}

.spinner {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
} 